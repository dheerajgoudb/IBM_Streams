<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<operatorInstanceModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator/instance" xmlns:an="http://www.ibm.com/xmlns/prod/streams/spl/annotation" xmlns:tt="http://www.ibm.com/xmlns/prod/streams/spl/tupleType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <context>
    <kind>spl.utility::Split</kind>
    <class>StockSplitter</class>
    <operatorModelDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/spl/spl/utility/Split</operatorModelDirectory>
    <applicationDirectory>/home/streamsadmin/soi/004_split</applicationDirectory>
    <dataDirectory>/home/streamsadmin/soi/004_split/data</dataDirectory>
    <outputDirectory>/home/streamsadmin/soi/004_split/output/com.vz.soi.mySplit/BuildConfig</outputDirectory>
    <toolkits>
      <toolkit isCurrentToolkit="false">
        <name>004_split</name>
        <rootDirectory>/home/streamsadmin/soi/004_split</rootDirectory>
        <index>0</index>
      </toolkit>
      <toolkit isCurrentToolkit="true">
        <name>spl</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/spl</rootDirectory>
        <index>1</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.cep</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.cep</rootDirectory>
        <index>2</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.cybersecurity</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.cybersecurity</rootDirectory>
        <index>3</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.dataexplorer</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.dataexplorer</rootDirectory>
        <index>4</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.db</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.db</rootDirectory>
        <index>5</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.financial</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.financial</rootDirectory>
        <index>6</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.geospatial</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.geospatial</rootDirectory>
        <index>7</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.mining</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.mining</rootDirectory>
        <index>8</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.rproject</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.rproject</rootDirectory>
        <index>9</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.rules</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.rules</rootDirectory>
        <index>10</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.rulescompiler</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.rulescompiler</rootDirectory>
        <index>11</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.teda</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.teda</rootDirectory>
        <index>12</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.text</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.text</rootDirectory>
        <index>13</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.timeseries</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streams.timeseries</rootDirectory>
        <index>14</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.datetime</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.datetime</rootDirectory>
        <index>15</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.dps</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.dps</rootDirectory>
        <index>16</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.hbase</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.hbase</rootDirectory>
        <index>17</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.hdfs</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.hdfs</rootDirectory>
        <index>18</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.inet</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.inet</rootDirectory>
        <index>19</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.iot</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.iot</rootDirectory>
        <index>20</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.jdbc</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.jdbc</rootDirectory>
        <index>21</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.json</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.json</rootDirectory>
        <index>22</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.messaging</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.messaging</rootDirectory>
        <index>23</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.network</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.network</rootDirectory>
        <index>24</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.sparkmllib</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.sparkmllib</rootDirectory>
        <index>25</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.topology</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.1.1/toolkits/com.ibm.streamsx.topology</rootDirectory>
        <index>26</index>
      </toolkit>
    </toolkits>
    <optimized>true</optimized>
    <verbose>false</verbose>
    <networkByteOrdering>false</networkByteOrdering>
    <codeBeautification>false</codeBeautification>
    <includes>
      <include>"../type/BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR.h"</include>
    </includes>
    <stateVariables/>
    <runtimeConstants>
      <runtimeConstant>
        <name>lit$0</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"split-rules.txt"</value>
      </runtimeConstant>
    </runtimeConstants>
    <sourceLocation>
      <file>com.vz.soi/mySplit.spl</file>
      <line>18</line>
      <column>3</column>
    </sourceLocation>
    <productVersion>4.2.1.1</productVersion>
    <types>
      <type index="0" type="rstring"/>
      <type index="1" type="tuple&lt;rstring symbol,float32 price,boolean buyOrSell>"/>
    </types>
    <checkpointKind>none</checkpointKind>
  </context>

  <parameters>
    <parameter>
      <name>file</name>
      <values>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$0</cppExpression>
          <splExpression>"split-rules.txt"</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>com.vz.soi/mySplit.spl</file>
            <line>30</line>
            <column>11</column>
          </sourceLocation>
          <expressionTree cppCode="SPL::rstring(&quot;split-rules.txt&quot;)">
            <literal cppCode="SPL::rstring(&quot;split-rules.txt&quot;)" type="0">"split-rules.txt"</literal>
          </expressionTree>
        </value>
      </values>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>30</line>
        <column>5</column>
      </sourceLocation>
    </parameter>
    <parameter>
      <name>key</name>
      <values>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>iport$0.get_symbol()</cppExpression>
          <splExpression>ST.symbol</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>true</hasStreamAttributes>
          <parameterExpressionMode>Expression</parameterExpressionMode>
          <sourceLocation>
            <file>com.vz.soi/mySplit.spl</file>
            <line>31</line>
            <column>10</column>
          </sourceLocation>
          <expressionTree cppCode="iport$0.get_symbol()">
            <attribute attribute="symbol" cppCode="iport$0.get_symbol()" type="0">
              <lhs cppCode="iport$0">
                <stream cppCode="iport$0" name="StockTicker" port="0" type="1"/>
              </lhs>
            </attribute>
          </expressionTree>
        </value>
      </values>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>31</line>
        <column>5</column>
      </sourceLocation>
    </parameter>
  </parameters>

  <inputPorts>
    <inputPort>
      <index>0</index>
      <tupleCppName>iport$0</tupleCppName>
      <tupleCppType>SPL::BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR</tupleCppType>
      <tupleSPLType>tuple&lt;rstring symbol,float32 price,boolean buyOrSell&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>27</line>
        <column>62</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>symbol</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
        </attribute>
        <attribute>
          <name>price</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
        </attribute>
        <attribute>
          <name>buyOrSell</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="symbol" type="rstring"/>
        <tt:attr name="price" type="float32"/>
        <tt:attr name="buyOrSell" type="boolean"/>
      </tuple>
    </inputPort>
  </inputPorts>

  <outputPorts>
    <outputPort>
      <index>0</index>
      <tupleCppName>oport$0</tupleCppName>
      <tupleCppType>SPL::BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR</tupleCppType>
      <tupleSPLType>tuple&lt;rstring symbol,float32 price,boolean buyOrSell&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>18</line>
        <column>4</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>symbol</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::rstring</cppType>
                <splType>rstring</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_symbol()</cppExpression>
                <splExpression>StockTicker.symbol</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>price</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_price()</cppExpression>
                <splExpression>StockTicker.price</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>buyOrSell</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::boolean</cppType>
                <splType>boolean</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_buyOrSell()</cppExpression>
                <splExpression>StockTicker.buyOrSell</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="symbol" type="rstring"/>
        <tt:attr name="price" type="float32"/>
        <tt:attr name="buyOrSell" type="boolean"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
    </outputPort>
    <outputPort>
      <index>1</index>
      <tupleCppName>oport$1</tupleCppName>
      <tupleCppType>SPL::BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR</tupleCppType>
      <tupleSPLType>tuple&lt;rstring symbol,float32 price,boolean buyOrSell&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>19</line>
        <column>4</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>symbol</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::rstring</cppType>
                <splType>rstring</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_symbol()</cppExpression>
                <splExpression>StockTicker.symbol</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>price</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_price()</cppExpression>
                <splExpression>StockTicker.price</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>buyOrSell</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::boolean</cppType>
                <splType>boolean</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_buyOrSell()</cppExpression>
                <splExpression>StockTicker.buyOrSell</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="symbol" type="rstring"/>
        <tt:attr name="price" type="float32"/>
        <tt:attr name="buyOrSell" type="boolean"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
    </outputPort>
    <outputPort>
      <index>2</index>
      <tupleCppName>oport$2</tupleCppName>
      <tupleCppType>SPL::BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR</tupleCppType>
      <tupleSPLType>tuple&lt;rstring symbol,float32 price,boolean buyOrSell&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>20</line>
        <column>4</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>symbol</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::rstring</cppType>
                <splType>rstring</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_symbol()</cppExpression>
                <splExpression>StockTicker.symbol</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>price</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_price()</cppExpression>
                <splExpression>StockTicker.price</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>buyOrSell</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::boolean</cppType>
                <splType>boolean</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_buyOrSell()</cppExpression>
                <splExpression>StockTicker.buyOrSell</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="symbol" type="rstring"/>
        <tt:attr name="price" type="float32"/>
        <tt:attr name="buyOrSell" type="boolean"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
    </outputPort>
    <outputPort>
      <index>3</index>
      <tupleCppName>oport$3</tupleCppName>
      <tupleCppType>SPL::BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR</tupleCppType>
      <tupleSPLType>tuple&lt;rstring symbol,float32 price,boolean buyOrSell&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>21</line>
        <column>4</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>symbol</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::rstring</cppType>
                <splType>rstring</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_symbol()</cppExpression>
                <splExpression>StockTicker.symbol</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>price</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_price()</cppExpression>
                <splExpression>StockTicker.price</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>buyOrSell</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::boolean</cppType>
                <splType>boolean</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_buyOrSell()</cppExpression>
                <splExpression>StockTicker.buyOrSell</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="symbol" type="rstring"/>
        <tt:attr name="price" type="float32"/>
        <tt:attr name="buyOrSell" type="boolean"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
    </outputPort>
    <outputPort>
      <index>4</index>
      <tupleCppName>oport$4</tupleCppName>
      <tupleCppType>SPL::BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR</tupleCppType>
      <tupleSPLType>tuple&lt;rstring symbol,float32 price,boolean buyOrSell&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>22</line>
        <column>4</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>symbol</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::rstring</cppType>
                <splType>rstring</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_symbol()</cppExpression>
                <splExpression>StockTicker.symbol</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>price</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_price()</cppExpression>
                <splExpression>StockTicker.price</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>buyOrSell</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::boolean</cppType>
                <splType>boolean</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_buyOrSell()</cppExpression>
                <splExpression>StockTicker.buyOrSell</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="symbol" type="rstring"/>
        <tt:attr name="price" type="float32"/>
        <tt:attr name="buyOrSell" type="boolean"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
    </outputPort>
    <outputPort>
      <index>5</index>
      <tupleCppName>oport$5</tupleCppName>
      <tupleCppType>SPL::BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR</tupleCppType>
      <tupleSPLType>tuple&lt;rstring symbol,float32 price,boolean buyOrSell&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>23</line>
        <column>4</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>symbol</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::rstring</cppType>
                <splType>rstring</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_symbol()</cppExpression>
                <splExpression>StockTicker.symbol</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>price</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_price()</cppExpression>
                <splExpression>StockTicker.price</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>buyOrSell</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::boolean</cppType>
                <splType>boolean</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_buyOrSell()</cppExpression>
                <splExpression>StockTicker.buyOrSell</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="symbol" type="rstring"/>
        <tt:attr name="price" type="float32"/>
        <tt:attr name="buyOrSell" type="boolean"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
    </outputPort>
    <outputPort>
      <index>6</index>
      <tupleCppName>oport$6</tupleCppName>
      <tupleCppType>SPL::BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR</tupleCppType>
      <tupleSPLType>tuple&lt;rstring symbol,float32 price,boolean buyOrSell&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>24</line>
        <column>4</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>symbol</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::rstring</cppType>
                <splType>rstring</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_symbol()</cppExpression>
                <splExpression>StockTicker.symbol</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>price</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_price()</cppExpression>
                <splExpression>StockTicker.price</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>buyOrSell</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::boolean</cppType>
                <splType>boolean</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_buyOrSell()</cppExpression>
                <splExpression>StockTicker.buyOrSell</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="symbol" type="rstring"/>
        <tt:attr name="price" type="float32"/>
        <tt:attr name="buyOrSell" type="boolean"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
    </outputPort>
    <outputPort>
      <index>7</index>
      <tupleCppName>oport$7</tupleCppName>
      <tupleCppType>SPL::BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR</tupleCppType>
      <tupleSPLType>tuple&lt;rstring symbol,float32 price,boolean buyOrSell&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>25</line>
        <column>4</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>symbol</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::rstring</cppType>
                <splType>rstring</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_symbol()</cppExpression>
                <splExpression>StockTicker.symbol</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>price</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_price()</cppExpression>
                <splExpression>StockTicker.price</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>buyOrSell</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::boolean</cppType>
                <splType>boolean</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_buyOrSell()</cppExpression>
                <splExpression>StockTicker.buyOrSell</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="symbol" type="rstring"/>
        <tt:attr name="price" type="float32"/>
        <tt:attr name="buyOrSell" type="boolean"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
    </outputPort>
    <outputPort>
      <index>8</index>
      <tupleCppName>oport$8</tupleCppName>
      <tupleCppType>SPL::BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR</tupleCppType>
      <tupleSPLType>tuple&lt;rstring symbol,float32 price,boolean buyOrSell&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>26</line>
        <column>4</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>symbol</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::rstring</cppType>
                <splType>rstring</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_symbol()</cppExpression>
                <splExpression>StockTicker.symbol</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>price</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_price()</cppExpression>
                <splExpression>StockTicker.price</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>buyOrSell</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::boolean</cppType>
                <splType>boolean</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_buyOrSell()</cppExpression>
                <splExpression>StockTicker.buyOrSell</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="symbol" type="rstring"/>
        <tt:attr name="price" type="float32"/>
        <tt:attr name="buyOrSell" type="boolean"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
    </outputPort>
    <outputPort>
      <index>9</index>
      <tupleCppName>oport$9</tupleCppName>
      <tupleCppType>SPL::BeJwrMS42K67MTcrPSTMtKMpMTk2yTCqt9C8KTs3JAQCbbArR</tupleCppType>
      <tupleSPLType>tuple&lt;rstring symbol,float32 price,boolean buyOrSell&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>com.vz.soi/mySplit.spl</file>
        <line>27</line>
        <column>4</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>symbol</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::rstring</cppType>
                <splType>rstring</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_symbol()</cppExpression>
                <splExpression>StockTicker.symbol</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>price</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_price()</cppExpression>
                <splExpression>StockTicker.price</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>buyOrSell</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
          <assignment>
            <sourceLocation>
              <file>&lt;invalid&gt;</file>
              <line>-1</line>
              <column>0</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::boolean</cppType>
                <splType>boolean</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>iport$0.get_buyOrSell()</cppExpression>
                <splExpression>StockTicker.buyOrSell</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>true</hasStreamAttributes>
                <sourceLocation>
                  <file>&lt;invalid&gt;</file>
                  <line>-1</line>
                  <column>0</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="symbol" type="rstring"/>
        <tt:attr name="price" type="float32"/>
        <tt:attr name="buyOrSell" type="boolean"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
    </outputPort>
  </outputPorts>

</operatorInstanceModel>
